<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.liqihua</groupId>
	<artifactId>flyway-demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>flyway-demo</name>
	<description>flyway管理数据库表结构版本的demo</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.6.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- druid连接池 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>1.1.3</version>
		</dependency>
		<!-- mysql驱动 -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>6.0.6</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<!-- flyway -->
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
			<version>5.2.0</version>
		</dependency>
		<!-- junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>


			<!--
				方式三：通过mvn命令执行

				flyway插件，可执行mvn flyway:clean、mvn flyway:migrate、mvn flyway:info、mvn flyway:validate、mvn flyway:baseline、mvn flyway:repair
				clean：把整个库所有的表结构清空
				migrate：把数据库表版本更新到最新，自动检查数据库脚本是否有变化，如果有变化，则执行脚本，更新数据库版本，如果数据库初始状态是空库，则会自动创建flyway_schema_history表，用于存储数据库操作的版本记录，只要数据库脚本有变化，都需要执行此命令。
				info：打印flyway_schema_history中记录信息
				validate：指验证当前数据库是否最新版本，或者已经Apply的Migrations是否有变更，Flyway是默认是开启验证的。也就是说已经执行过的sql文件是否被修改过，如果有，执行mvn flyway:validate会输出ERROR错误
				baseline：Baseline 是指数据库非空状态下使用flyway首先执行的命令，用于创建flyway_schema_history表
				repair：Repair会修复Metadata表的错误，通常有两种用途：
						1、移除失败的Migration记录，该问题只是针对不支持DDL事务的数据库。
						2、重新调整已经应用的Migratons的Checksums值
			-->
			<plugin>
				<groupId>org.flywaydb</groupId>
				<artifactId>flyway-maven-plugin</artifactId>
				<version>5.2.0</version>
				<configuration>
					<user>root</user>
					<password>123</password>
					<driver>com.mysql.cj.jdbc.Driver</driver>
					<url>jdbc:mysql://127.0.0.1:3306/flyway_demo?useUnicode=true&amp;characterEncoding=utf8&amp;serverTimezone=Hongkong</url>
				</configuration>
			</plugin>
		</plugins>
	</build>


</project>
